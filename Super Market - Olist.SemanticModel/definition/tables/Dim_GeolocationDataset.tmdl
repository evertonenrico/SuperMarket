table Dim_GeolocationDataset
	lineageTag: b33ed3d0-a9fa-42fc-9a4d-804b7fa1f772

	column zipcode_prefix
		dataType: string
		lineageTag: d513f73a-0ad3-4485-9109-9ee70586e3db
		summarizeBy: none
		sourceColumn: zipcode_prefix

		annotation SummarizationSetBy = Automatic

	column customer_city
		dataType: string
		lineageTag: 547932e3-b513-46a1-aad6-9415fd3f995e
		dataCategory: City
		summarizeBy: none
		sourceColumn: customer_city

		annotation SummarizationSetBy = Automatic

	column state
		dataType: string
		lineageTag: 12279605-000b-4d5b-a343-5749fa1288b5
		summarizeBy: none
		sourceColumn: state

		annotation SummarizationSetBy = Automatic

	column state_name
		dataType: string
		lineageTag: 57149369-984f-4527-a9c8-75507357e306
		dataCategory: StateOrProvince
		summarizeBy: none
		sourceColumn: state_name

		annotation SummarizationSetBy = Automatic

	column region
		dataType: string
		lineageTag: 75f1e291-d3bc-4838-ad21-009bf0d03dab
		summarizeBy: none
		sourceColumn: region

		annotation SummarizationSetBy = Automatic

	partition Dim_GeolocationDataset = m
		mode: import
		source = ```
				let
				
				    Fonte = Csv.Document(File.Contents("G:\Meu Drive\Power BI Microsoft\ESTUDOS - PORTFOLIO\Super Market\SuperMarket\dataset\new_olist_geolocations.csv"),[Delimiter=",", Columns=11, Encoding=65001, QuoteStyle=QuoteStyle.None]),
				    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(Fonte, [PromoteAllScalars=true]),
				    #"Tipo Alterado" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"zipcode_prefix", type text}, {"zipcode_lat", Int64.Type}, {"zipcode_lon", Int64.Type}, {"location", type text}, {"state", type text}, {"state_name", type text}, {"region", type text}, {"state_lat", Int64.Type}, {"state_lon", Int64.Type}, {"loc_lat", Int64.Type}, {"loc_lon", Int64.Type}}),
				    #"Duplicatas Removidas" = Table.Distinct(#"Tipo Alterado", {"location"}),
				    #"Colunas Renomeadas" = Table.RenameColumns(#"Duplicatas Removidas",{{"location", "customer_city"}}),
				    #"Valor Substituído" = Table.ReplaceValue(#"Colunas Renomeadas","Parati","Paraty",Replacer.ReplaceText,{"customer_city"}),
				    #"Consulta Acrescentada" = Table.Combine({#"Valor Substituído", Dim_CustomersDataset}),
				    #"Duplicatas Removidas1" = Table.Distinct(#"Consulta Acrescentada", {"customer_city"}),
				    #"Colunas Removidas" = Table.RemoveColumns(#"Duplicatas Removidas1",{"customer_id", "customer_unique_id", "customer_zip_code_prefix", "zipcode_lat", "zipcode_lon", "state_lat", "state_lon", "loc_lat", "loc_lon"}),
				    NameState = Table.FromRecords(
				    Table.TransformRows(#"Colunas Removidas", (row) =>
				        Record.TransformFields(row,
				            {
				                {"state_name", (state_name) =>
				                    if row[state] = "BA" then "Bahia"
				                    else if  row[state] = "MG" then "Minhas Gerais"
				                        else if row[state] = "SP" then "Sao Paulo"
				                            else if row[state] = "RJ" then "Rio de Janeiro"
				                                else if row[state] = "MA" then "Maranhao"
				                                    else if row[state] = "PA" then "Para"
				                                        else if row[state] = "PR" then "Parana"
				                                            else if row[state] = "GO" then "Goias"
				                                                else if row[state] = "CE" then "Ceara"
				                                                    else if row[state] = "RS" then "Rio Grande do Sul"
				                                                        else if row[state] = "MS" then "Mato Grosso do Sul"
				                                                            else if row[state] = "PB" then "Paraiba"
				                                                                else if row[state] = "SC" then "Santa Catarina"
				                                                                    else if row[state] = "SE" then "Sergipe"
				                                                                        else if row[state] = "RN" then "Rio Grande do Norte"
				                                                                            else if row[state] = "PE" then "Pernambuco"
				                                                                                else if row[state] = "ES" then "Espirito Santo"
				
				                        else state_name
				                }
				            }
				        )
				    )
				),
				    NameRegion = Table.FromRecords(
				    Table.TransformRows(NameState, (row) =>
				        Record.TransformFields(row,
				            {
				                {"region", (region) =>
				                    if row[state] = "ES" then "Southeast"
				                    else if  row[state] = "MG" then "Southeast"
				                        else if row[state] = "SP" then "Southeast"
				                            else if row[state] = "RJ" then "Southeast"
				                                else if row[state] = "DF" then "Central-West"
				                                    else if row[state] = "GO" then "Central-West"
				                                        else if row[state] = "MT" then "Central-West"
				                                            else if row[state] = "MS" then "Central-West"
				                                                else if row[state] = "AC" then "North" 
				                                                    else if row[state] = "AP" then "North"
				                                                        else if row[state] = "AM" then "North"
				                                                            else if row[state] = "PA" then "North"  
				                                                                else if row[state] = "RO" then "North" 
				                                                                    else if row[state] = "RR" then "North"
				                                                                        else if row[state] = "TO" then "North"
				                                                                            else if row[state] = "PR" then "South"
				                                                                                else if row[state] = "SC" then "South"
				                                                                                    else if row[state] = "RS" then "South"
				                                                                                        else if row[state] = "AL" then "Northeast"
				                                                                                            else if row[state] = "BA" then "Northeast"
				                                                                                                else if row[state] = "CE" then "Northeast"
				                                                                                                    else if row[state] = "MA" then "Northeast"
				                                                                                                        else if row[state] = "PB" then "Northeast"
				                                                                                                            else if row[state] = "PE" then "Northeast"
				                                                                                                                else if row[state] = "PI" then "Northeast"
				                                                                                                                    else if row[state] = "RN" then "Northeast"
				                                                                                                                        else if row[state] = "SE" then "Northeast"
				                              else region
				                }
				            }
				        )
				    )
				),
				    #"Linhas Filtradas" = Table.SelectRows(NameRegion, each true)
				in
				    #"Linhas Filtradas"
				```

	annotation PBI_NavigationStepName = Navegação

	annotation PBI_ResultType = Table

